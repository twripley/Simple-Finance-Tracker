name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # âœ… Fetch full history so HEAD^ and tags work

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF##*/} # Extract tag name like v1.0.0
          docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$TAG" .
          docker push "$IMAGE_NAME:latest"
          docker push "$IMAGE_NAME:$TAG"

      - name: Generate changelog from last tag
        id: changelog
        run: |
          git fetch --tags
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            echo "Generating changelog from $PREV_TAG to current tag"
            git log --pretty=format:'- %s (%an)' $PREV_TAG..HEAD > changelog.txt
          else
            echo "No previous tag found, generating full changelog"
            git log --pretty=format:'- %s (%an)' > changelog.txt
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Changelog
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Gotify notification
        run: |
          curl -X POST "https://gotify.tylerripley.com/message?token=AE_roYUhK4A2pXy" \
            -H "Content-Type: application/json" \
            -d '{
              "title": "New Release Deployed",
              "message": "Docker image for tag ${{ github.ref_name }} has been built and pushed to ghcr.io.",
              "priority": 5
            }'
